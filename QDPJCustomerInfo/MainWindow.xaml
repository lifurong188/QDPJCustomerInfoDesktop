<Window x:Class="QDPJCustomerInfo.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:QDPJCustomerInfo"
        mc:Ignorable="d"
        Title="客户信息查询" Height="600" Width="900" WindowStartupLocation="CenterScreen" KeyUp="Window_KeyUp"  WindowStyle="None" BorderBrush="#7CCD7C" BorderThickness="1" AllowsTransparency="True">
    <Window.Resources>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Width" Value="100"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Margin" Value="10 0 0 0"/>
            <Setter Property="Foreground" Value="#fff"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="bd" BorderBrush="#7CCD7C" BorderThickness="1" Background="#7CCD7C" CornerRadius="3">
                            <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="bd" Value="#43CD80"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" Value="#43CD80"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="EditButton">
            <Setter Property="Width" Value="50"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Foreground" Value="#000"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="bd" BorderBrush="Gray" BorderThickness="1" Background="LightGray" CornerRadius="0">
                            <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="bd" Value="DarkGray"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" Value="DarkGray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="ToggleButton" x:Key="stlToggleButton">
            
            <Setter Property="Foreground" Value="White"></Setter>
            
            <Setter Property="Template">
                
                <Setter.Value>
                    
                    <ControlTemplate>
                        
                        <Border x:Name="Back" Background="#F7FDF7" BorderThickness="1" BorderBrush="Transparent">
                            
                            <Path Name="PathFill" Fill="#59CA4F" Width="8" Height="6" StrokeThickness="0" Data="M5,0 L10,10 L0,10 z" RenderTransformOrigin="0.5,0.5" Stretch="Fill">
                                
                                <Path.RenderTransform>
                                    
                                    <TransformGroup>
                                        
                                        <ScaleTransform/>
                                        
                                        <SkewTransform/>
                                        
                                        <RotateTransform Angle="180"/>
                                        
                                        <TranslateTransform/>
                                        
                                    </TransformGroup>
                                    
                                </Path.RenderTransform>
                                
                            </Path>
                            
                        </Border>
                        
                        <ControlTemplate.Triggers>
                            
                            <Trigger Property="IsMouseOver" Value="True">
                                
                                <Setter TargetName="PathFill" Property="Fill" Value="White"></Setter>
                                
                                <Setter TargetName="Back" Property="Background" Value="#59CA4F"></Setter>
                                
                                <Setter TargetName="Back" Property="BorderBrush" Value="#59CA4F"></Setter>
                                
                            </Trigger>
                            
                        </ControlTemplate.Triggers>
                        
                    </ControlTemplate>
                    
                </Setter.Value>
                
            </Setter>
            
        </Style>
        <Style TargetType="ComboBox" >
            
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>

            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>

            <Setter Property="Foreground" Value="Black"></Setter>
            
            <Setter Property="Height" Value="30"></Setter>
            
            <Setter Property="Margin" Value="0,0,0,0"></Setter>

            <Setter Property="SelectedIndex" Value="0"/>
            <Setter Property="Template">
                
                <Setter.Value>
                    
                    <ControlTemplate TargetType="ComboBox">
                        
                        <Grid Background="#F7FDF7">
                            
                            <Grid.ColumnDefinitions>
                                
                                <ColumnDefinition Width="0.7*"/>
                                
                                <ColumnDefinition Width="0.3*" MaxWidth="30"/>
                                
                            </Grid.ColumnDefinitions>
                            
                            <Label  Grid.Column="0" Content="{TemplateBinding Text}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"></Label>
                            
                            <Border  Grid.Column="0" BorderThickness="1,1,0,1" BorderBrush="#81D779" CornerRadius="1,0,0,1">
                                </Border>
                            
                            <Border Grid.Column="1" BorderThickness="0,1,1,1" BorderBrush="#81D779" CornerRadius="0,1,1,0">
                                
                                <ToggleButton Style="{StaticResource stlToggleButton}" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"></ToggleButton>
                                
                            </Border>
                            
                            <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide">
                                
                                <Border CornerRadius="1" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True">
                                    
                                    <Border.Effect>
                                        
                                        <DropShadowEffect Color="Black" BlurRadius="2" ShadowDepth="0" Opacity="0.5"/>
                                        
                                    </Border.Effect>
                                    
                                    <ScrollViewer Style="{DynamicResource ScrollViewerStyle}" MaxHeight="{TemplateBinding MaxDropDownHeight}" SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True">
                                        
                                        <!-- StackPanel 用于显示子级，方法是将 IsItemsHost 设置为 True -->
                                        
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" Background="White"/>
                                        
                                    </ScrollViewer>
                                    
                                </Border>
                                
                            </Popup>
                            
                        </Grid>
                        
                    </ControlTemplate>
                    
                </Setter.Value>
                
            </Setter>
            
        </Style>

        <Style TargetType="ComboBoxItem">
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Grid Background="{TemplateBinding Background}" Margin="0,0.5">
                            <Border x:Name="ItemBackground" IsHitTestVisible="False" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}" />
                            <ContentPresenter x:Name="contentPresenter" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <!--<Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="ItemBackground" Property="Background" Value="#7CCD7C" />
                            </Trigger>-->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ItemBackground" Property="Background" Value="#7CCD7C" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="DataGridColumnHeader">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="MinWidth" Value="0" />
            <Setter Property="MinHeight" Value="28" />
            <Setter Property="Foreground" Value="#323433" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGridColumnHeader">
                        <Border x:Name="BackgroundBorder" BorderThickness="0,1,0,1" 
                             BorderBrush="#e6dbba" 
                              Width="Auto">
                            <Grid >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter  Margin="0,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                <Path x:Name="SortArrow" Visibility="Collapsed" Data="M0,0 L1,0 0.5,1 z" Stretch="Fill"  Grid.Column="2" Width="8" Height="6" Fill="White" Margin="0,0,50,0" 
                            VerticalAlignment="Center" RenderTransformOrigin="1,1" />
                                <Rectangle Width="1" Fill="#d6c79b" HorizontalAlignment="Right" Grid.ColumnSpan="1" />
                                <!--<TextBlock  Background="Red">
                            <ContentPresenter></ContentPresenter></TextBlock>-->
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Height" Value="25"/>
        </Style>
        <!--行样式触发-->
        <!--背景色改变必须先设置cellStyle 因为cellStyle会覆盖rowStyle样式-->
        <Style  TargetType="DataGridRow">
            <Setter Property="Height" Value="25"/>
            <Setter Property="Foreground" Value="Black" />
            <Style.Triggers>
                <!--隔行换色-->
                <Trigger Property="AlternationIndex" Value="0" >
                    <Setter Property="Background" Value="#e7e7e7" />
                </Trigger>
                <Trigger Property="AlternationIndex" Value="1" >
                    <Setter Property="Background" Value="#f2f2f2" />
                </Trigger>

                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="LightGray"/>
                    <!--<Setter Property="Foreground" Value="White"/>-->
                </Trigger>

                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--单元格样式触发-->
        <Style TargetType="DataGridCell">
            <Setter Property="Height" Value="25"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGridCell">
                        <TextBlock TextAlignment="Center" VerticalAlignment="Center">
                           <ContentPresenter />
                        </TextBlock>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <!--<Setter Property="Background" Value="White"/>
                <Setter Property="BorderThickness" Value="0"/>-->
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="40"/>
                <RowDefinition Height="40"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="30"/>
            </Grid.RowDefinitions>
            <StackPanel Orientation="Horizontal" Background="#7CCD7C">
                <Label x:Name="lblTitle" Content="青岛啤酒客户信息查询" FontSize="20" Foreground="#fff" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Width="860"/>
                <Button x:Name="btnExit" Content="×" FontSize="20" Foreground="#fff" Click="btnExit_Click">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border x:Name="bd" Width="30" Height="30" Background="Transparent">
                                            <TextBlock x:Name="tb" Text="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" TargetName="bd" Value="#fff"/>
                                                <Setter Property="Foreground" TargetName="tb" Value="#7CCD7C"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>
            
            <StackPanel Orientation="Horizontal" Margin="3" Grid.Row="1" HorizontalAlignment="Center">
                <!--
                <TextBlock Text="检索范围：" FontSize="14" TextAlignment="Center" VerticalAlignment="Center" HorizontalAlignment="Right"/>
                <ComboBox x:Name="cboFilters" Width="100" Margin="10 0 0 0" Height="30">
                    <ComboBox.Items>
                        <ComboBoxItem Content="终端名称"/>
                        <ComboBoxItem Content="终端编码"/>
                        <ComboBoxItem Content="联系人"/>
                        <ComboBoxItem Content="联系电话"/>
                        <ComboBoxItem Content="地址"/>
                        <ComboBoxItem Content="地区"/>
                    </ComboBox.Items>
                </ComboBox>
                -->
                <TextBlock Text="快速检索：" FontSize="14" TextAlignment="Center" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="10 0 0 0"/>
                <TextBox x:Name="txtKeyWord" Width="570" Grid.Column="1" Margin="15 0 0 0" Height="30" VerticalContentAlignment="Center">
                    <TextBox.Resources>
                        <VisualBrush x:Key="HelpBrush" TileMode="None" Opacity="0.3" Stretch="None" AlignmentX="Left">
                            <VisualBrush.Visual>
                                <TextBlock FontStyle="Normal" Text="终端名称\终端编码\联系人\联系电话" />
                            </VisualBrush.Visual>
                        </VisualBrush>
                    </TextBox.Resources>
                    <TextBox.Style>
                        <Style TargetType="TextBox">
                            <Setter Property="BorderThickness" Value="1"/>
                            <Style.Triggers>
                                <Trigger Property="Text" Value="{x:Null}">
                                    <Setter Property="Background" Value="{StaticResource HelpBrush}"/>
                                    <Setter Property="BorderBrush" Value="#7CCD7C"/>
                                </Trigger>
                                <Trigger Property="Text" Value="">
                                    <Setter Property="Background" Value="{StaticResource HelpBrush}"/>
                                    <Setter Property="BorderBrush" Value="#7CCD7C"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>

                <Button x:Name="btnFilter" Content="检索" Click="btnFilter_Click"/>
                <Button x:Name="btnAdd" Content="增加" Click="btnAdd_Click"/>

            </StackPanel>
            <DataGrid x:Name="dgvCustomers" AutoGenerateColumns="False" Margin="5" CanUserAddRows="False" Grid.Row="2" SelectionMode="Single" RowDetailsVisibilityMode="Visible">
                <DataGrid.Columns>

                    <DataGridTextColumn Header="终端编码" Width="130" Binding="{Binding CustCode, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>

                    <DataGridTextColumn Header="地区" Width="70" Binding="{Binding Area, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>

                    <DataGridTextColumn Header="终端名称" Width="140" Binding="{Binding CustName, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>

                    <DataGridTextColumn Header="等级" Width="40" Binding="{Binding CustLevel, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>

                    <DataGridTextColumn Header="联系人" Width="100" Binding="{Binding Linkman, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>

                    <DataGridTextColumn Header="联系电话" Width="120" Binding="{Binding PhoneNum, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>

                    <DataGridTextColumn Header="地址" Width="140" Binding="{Binding Address.AddressInfo,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"/>

                    <DataGridTemplateColumn Header="操作" Width="110" >
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                    <Button x:Name="btnModify" Content="修改" Style="{StaticResource EditButton}" Click="btnModify_Click" />
                                    <Button x:Name="btnDelete" Content="删除" Style="{StaticResource EditButton}" Click="btnDelete_Click" Margin="2 0 0 0"/>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                </DataGrid.Columns>
                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="LightBlue"/>
                                <Setter Property="FontWeight" Value="Bold"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>
            </DataGrid>
            <TextBlock x:Name="tbRowCount" Text="共0条数据" Grid.Row="3" VerticalAlignment="Center" Margin="10 0 0 0"/>
        </Grid>
    </Grid>
</Window>
